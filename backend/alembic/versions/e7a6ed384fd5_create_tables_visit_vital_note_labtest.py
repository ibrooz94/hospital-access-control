"""create tables Visit, Vital, Note, LabTest

Revision ID: e7a6ed384fd5
Revises: e537fa1ce1de
Create Date: 2024-04-03 21:26:07.105310

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import fastapi_users_db_sqlalchemy

# revision identifiers, used by Alembic.
revision: str = 'e7a6ed384fd5'
down_revision: Union[str, None] = 'e537fa1ce1de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('CHECKED_IN', 'CHECKED_OUT', 'DISCHARGED', 'ADMITTED', name='visitstatus').create(op.get_bind())
    sa.Enum('REQUESTED', 'PENDING', 'COMPLETED', name='labstatus').create(op.get_bind())
    op.create_table('visit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('reason_for_visit', sa.String(), nullable=False),
    sa.Column('visit_status', postgresql.ENUM('CHECKED_IN', 'CHECKED_OUT', 'DISCHARGED', 'ADMITTED', name='visitstatus', create_type=False), nullable=False),
    sa.Column('discharged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['user.id'], name=op.f('fk_visit_patient_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visit'))
    )
    op.create_index(op.f('ix_visit_id'), 'visit', ['id'], unique=False)
    op.create_table('labtest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('visit_id', sa.Integer(), nullable=True),
    sa.Column('lab_type', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('REQUESTED', 'PENDING', 'COMPLETED', name='labstatus', create_type=False), nullable=False),
    sa.Column('result', sa.String(), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['visit_id'], ['visit.id'], name=op.f('fk_labtest_visit_id_visit'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_labtest'))
    )
    op.create_index(op.f('ix_labtest_id'), 'labtest', ['id'], unique=False)
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('visit_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['visit_id'], ['visit.id'], name=op.f('fk_note_visit_id_visit'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_note'))
    )
    op.create_index(op.f('ix_note_id'), 'note', ['id'], unique=False)
    op.create_table('vital',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('visit_id', sa.Integer(), nullable=False),
    sa.Column('taken_by', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('temperature', sa.String(), nullable=True),
    sa.Column('blood_pressure', sa.String(), nullable=True),
    sa.Column('other', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['taken_by'], ['user.id'], name=op.f('fk_vital_taken_by_user')),
    sa.ForeignKeyConstraint(['visit_id'], ['visit.id'], name=op.f('fk_vital_visit_id_visit'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vital'))
    )
    op.create_index(op.f('ix_vital_id'), 'vital', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vital_id'), table_name='vital')
    op.drop_table('vital')
    op.drop_index(op.f('ix_note_id'), table_name='note')
    op.drop_table('note')
    op.drop_index(op.f('ix_labtest_id'), table_name='labtest')
    op.drop_table('labtest')
    op.drop_index(op.f('ix_visit_id'), table_name='visit')
    op.drop_table('visit')
    sa.Enum('REQUESTED', 'PENDING', 'COMPLETED', name='labstatus').drop(op.get_bind())
    sa.Enum('CHECKED_IN', 'CHECKED_OUT', 'DISCHARGED', 'ADMITTED', name='visitstatus').drop(op.get_bind())
    # ### end Alembic commands ###
